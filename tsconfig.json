{
  "compilerOptions": {
    // 指定要使用的模块化的规范
    "module": "es2015",
    // target表示被编译为的ES版本
    "target": "es2015",
    "sourceMap": true,
    // 用来指定项目中使用的库
    // 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'es2022.array', 'es2022.error', 'es2022.object', 'es2022.string', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'
    "lib": ["es6"],
    // 指定编译后文件放在哪个目录里
    "outDir": "./dist",
    // 将代码合并为一个文件
    // 设置outFile后，所有全局作用域中的代码会合并到同一个文件
    // "outFile": "./dist/app.js",
    // 是否对js文件进行编译，默认是FALSE
    "allowJs": false,
    // 是否检查JS代码符合语法规范，默认false
    "checkJs": false,
    // 是否移除注释
    "removeComments": true,
    // 不生成编译后的文件
    "noEmit": true,
    // 当有错误时不生成编译后的文件
    "noEmitOnError": true,
    // 用来设置编译后的文件是否使用严格模式，默认false
    "alwaysStrict": true,
    // 不允许隐式的any类型
    "noImplicitAny": true,
    // 不允许不明确类型的this
    "noImplicitThis": true,
    // 严格的检查空值
    "strictNullChecks": false,
    // 所有严格检查的总开关
    "strict": false
  },
  "exclude": [
    "./src/**/*"
  ],
  "include": [
    "./part/**/*"
  ],
  // "extends": ""
  // "files": []
}
